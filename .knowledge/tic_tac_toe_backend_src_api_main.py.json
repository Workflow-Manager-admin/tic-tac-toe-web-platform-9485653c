{"is_source_file": true, "format": "Python", "description": "This is a FastAPI backend implementation for a Tic Tac Toe web platform. It includes endpoints for user authentication, game management, game history, leaderboards, and user stats. The file imports external libraries such as FastAPI, SQLAlchemy, and Pydantic models, and defines route handlers for various API functionalities.", "external_files": ["./models", "./db", "./models_sql", "./security", "./game_logic"], "external_methods": ["get_password_hash", "create_access_token", "get_current_user", "authenticate_user", "get_db", "empty_board", "validate_move", "apply_move", "check_winner", "is_board_full", "next_turn", "best_ai_move"], "published": ["app"], "classes": [], "methods": [{"name": "register_user(reg: UserRegister, db: Session = Depends(get_db))", "description": "Registers a new user with a unique username and hashed password.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticates a user and issues a JWT access token.", "scope": "", "scopeKind": ""}, {"name": "get_me(current_user: User = Depends(get_current_user))", "description": "Retrieves current authenticated user information.", "scope": "", "scopeKind": ""}, {"name": "get_session_info(current_user: User = Depends(get_current_user))", "description": "Provides session validity information for the current user.", "scope": "", "scopeKind": ""}, {"name": "start_game( pvp: bool = Body(..., embed=True, description=\"True for PvP, False for vs AI\"), db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Starts a new Tic Tac Toe game session, either PvP or vs AI.", "scope": "", "scopeKind": ""}, {"name": "make_move( game_id: int = Body(..., embed=True), row: int = Body(..., embed=True), col: int = Body(..., embed=True), db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )", "description": "Processes a move in an existing game, applies game logic, checks win/draw conditions, and handles AI responses if applicable.", "scope": "", "scopeKind": ""}, {"name": "my_games(db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Retrieves game history for the current user.", "scope": "", "scopeKind": ""}, {"name": "all_games(db: Session = Depends(get_db))", "description": "Retrieves all game records in the system.", "scope": "", "scopeKind": ""}, {"name": "leaderboard(db: Session = Depends(get_db))", "description": "Generates a leaderboard based on user wins.", "scope": "", "scopeKind": ""}, {"name": "user_stats(db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Provides stats for the current user, including wins, losses, and draws.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Basic health endpoint to verify server status.", "scope": "", "scopeKind": ""}], "calls": ["get_password_hash", "create_access_token", "get_current_user", "authenticate_user", "get_db", "empty_board", "validate_move", "apply_move", "check_winner", "is_board_full", "next_turn", "best_ai_move"], "search-terms": ["FastAPI", "tic_tac_toe_backend", "auth", "game", "game_logic", "user registration", "game move", "leaderboard", "stats", "session", "health"], "state": 2, "file_id": 2, "knowledge_revision": 22, "git_revision": "0f350f060bf15428fa016e7565d7ce70a14bd26d", "revision_history": [{"9": "a1aa9d4a6a4997d9b9bca043085e71ee875347a4"}, {"20": "a1aa9d4a6a4997d9b9bca043085e71ee875347a4"}, {"21": "0f350f060bf15428fa016e7565d7ce70a14bd26d"}, {"22": "0f350f060bf15428fa016e7565d7ce70a14bd26d"}], "ctags": [{"_type": "tag", "name": "all_games", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def all_games(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_me", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def get_me(current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_session_info", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def get_session_info(current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "leaderboard", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def leaderboard(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def make_move($/", "language": "Python", "kind": "function", "signature": "( game_id: int = Body(..., embed=True), row: int = Body(..., embed=True), col: int = Body(..., embed=True), db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "my_games", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def my_games(db: Session = Depends(get_db), current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "register_user", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def register_user(reg: UserRegister, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(reg: UserRegister, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "start_game", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def start_game($/", "language": "Python", "kind": "function", "signature": "( pvp: bool = Body(..., embed=True, description=\"True for PvP, False for vs AI\"), db: Session = Depends(get_db), current_user: User = Depends(get_current_user) )"}, {"_type": "tag", "name": "tags_metadata", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^tags_metadata = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "user_stats", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/main.py", "pattern": "/^def user_stats(db: Session = Depends(get_db), current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}], "hash": "b251186bdf7618e266ea9320fc74aca4", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "tags_metadata = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}