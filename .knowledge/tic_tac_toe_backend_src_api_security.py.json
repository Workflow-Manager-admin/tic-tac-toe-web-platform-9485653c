{"is_source_file": true, "format": "Python", "description": "This file handles security-related functionalities for a FastAPI web backend, including JWT token creation, password hashing and verification, user retrieval, and authentication via OAuth2.", "external_files": ["./models_sql", "./db"], "external_methods": ["get_db", "jwt.encode", "jwt.decode", "bcrypt verify", "hash"], "published": ["create_access_token", "get_user_by_username", "authenticate_user", "get_current_user"], "classes": [], "methods": [{"name": "verify_password(plain_password, hashed_password)", "description": "Verifies a plain password against a hashed password.", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Hashes a password using bcrypt.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: timedelta = None)", "description": "Creates a JWT access token with an optional expiration.", "scope": "", "scopeKind": ""}, {"name": "get_user_by_username(db: Session, username: str)", "description": "Retrieves a User object from the database given a username.", "scope": "", "scopeKind": ""}, {"name": "authenticate_user(db: Session, username: str, password: str)", "description": "Authenticates a user by verifying username and password.", "scope": "", "scopeKind": ""}, {"name": "get_current_user(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme))", "description": "Retrieves the current authenticated user based on JWT token.", "scope": "", "scopeKind": ""}], "calls": ["jwt.encode", "jwt.decode", "verify_password", "get_user_by_username", "get_db", "HTTPException", "datetime.utcnow", "timedelta"], "search-terms": ["JWT", "OAuth2PasswordBearer", "security", "create_access_token", "verify_password", "FastAPI security", "password hashing", "Login authentication"], "state": 2, "file_id": 8, "knowledge_revision": 23, "git_revision": "0f350f060bf15428fa016e7565d7ce70a14bd26d", "revision_history": [{"17": ""}, {"23": "0f350f060bf15428fa016e7565d7ce70a14bd26d"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 24  # One day$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^SECRET_KEY = os.environ.get(\"SECRET_KEY\", \"supersecret\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^def authenticate_user(db: Session, username: str, password: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, username: str, password: str)"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^def create_access_token(data: dict, expires_delta: timedelta = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: timedelta = None)"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^def get_current_user(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "get_user_by_username", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^def get_user_by_username(db: Session, username: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, username: str)"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-web-platform-9485653c/tic_tac_toe_backend/src/api/security.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "7fafc6ec0826e78847bf854392a221ba", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/security.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 24  # One day", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.environ.get(\"SECRET_KEY\", \"supersecret\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}